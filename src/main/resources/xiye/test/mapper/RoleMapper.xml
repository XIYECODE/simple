<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xiye.test.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="xiye.test.model.Role">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="xiye.test.model.Role">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (id, role_name, enabled, 
      create_by, create_time)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, 
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="xiye.test.model.Role">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, role_name, enabled, create_by, create_time
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, role_name, enabled, create_by, create_time
    from sys_role
  </select>
  <!-- 》》》》》》》》》》》》》》》》》》》》》》》》》》自定义SQL《《《《《《《《《《《《《《《《《《《《《《 -->
  <resultMap id="rolePrivilegeListMap" extends="BaseResultMap" type="xiye.test.model.Role">
  	<collection property="privileges" columnPrefix="privilege_" resultMap="xiye.test.dao.PrivilegeMapper.BaseResultMap"/>
  </resultMap>
  <resultMap id="rolePrivilegeListMapSelect" extends="BaseResultMap" type="xiye.test.model.Role">
  	<collection property="privileges" fetchType="lazy" column="{roleId=id}" select="xiye.test.dao.PrivilegeMapper.selectPrivilegeByRoleId"/>
  </resultMap>
  <!-- ==================================== 查询 =============================== -->
  <select id="selectRoleById" resultMap="BaseResultMap">
  	select id, role_name, enabled, create_by, create_time
  	from sys_role
  	where id = #{id}
  </select>
  <select id="selectRoleByUserId" resultMap="rolePrivilegeListMapSelect">
  	select r.id, r.role_name, r.enabled, r.create_by, r.create_time
  	from sys_role r
  	inner join sys_user_role ur on ur.role_id = r.id
  	where ur.user_id = #{userId}
  </select>
  <!-- ==================================== 新增 ================================ -->
  
  <!-- ==================================== 更新 ================================ -->
  
  <!-- ==================================== 删除 ================================ -->
  
</mapper>